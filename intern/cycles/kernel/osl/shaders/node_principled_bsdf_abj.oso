OpenShadingLanguage 1.00
# Compiled by oslc 1.11.14
# options: -o C:\Users\aleks\AppData\Local\Temp\tmp8lsncfro.oso -IC:\Program Files\Blender Foundation\Blender 3.0\3.0\scripts\addons\cycles\shader
shader node_principled_bsdf_abj
param	string	distribution	"Multiscatter GGX"		%read{125,197} %write{2147483647,-1}
param	string	subsurface_method	"random_walk"		%read{92,92} %write{2147483647,-1}
param	color	BaseColor	0.800000012 0.800000012 0.800000012		%read{24,215} %write{2147483647,-1}
param	float	Subsurface	0		%read{85,91} %write{2147483647,-1}
param	vector	SubsurfaceRadius	1 1 1		%read{91,91} %write{2147483647,-1}
param	color	SubsurfaceColor	0.699999988 0.100000001 0.100000001		%read{87,87} %write{2147483647,-1}
param	float	SubsurfaceIOR	1.39999998		%read{92,92} %write{2147483647,-1}
param	float	SubsurfaceAnisotropy	0		%read{92,92} %write{2147483647,-1}
param	float	Metallic	0		%read{6,123} %write{2147483647,-1}
param	float	Specular	0.5		%read{119,140} %write{2147483647,-1}
param	float	SpecularTint	0		%read{115,151} %write{2147483647,-1}
param	float	Roughness	0.5		%read{2147483647,-1} %write{2147483647,-1}
param	float	Anisotropic	0		%read{109,109} %write{2147483647,-1}
param	float	AnisotropicRotation	0		%read{29,31} %write{2147483647,-1}
param	float	Sheen	0		%read{96,103} %write{2147483647,-1}
param	float	SheenTint	0.5		%read{98,100} %write{2147483647,-1}
param	float	Clearcoat	0		%read{218,221} %write{2147483647,-1}
param	float	ClearcoatRoughness	0.0299999993		%read{220,220} %write{2147483647,-1}
param	float	IOR	1.45000005		%read{4,4} %write{2147483647,-1}
param	float	Transmission	0		%read{10,15} %write{2147483647,-1}
param	float	TransmissionRoughness	0		%read{200,200} %write{2147483647,-1}
param	normal	Normal	0 0 0		%read{33,215} %write{0,0} %initexpr
param	normal	ClearcoatNormal	0 0 0		%read{221,221} %write{1,1} %initexpr
param	normal	Tangent	0 0 0		%read{23,23} %write{2,2} %initexpr
param	normal	SpecularNormal	0 0 0		%read{137,145} %write{3,3} %initexpr
param	float	SpecularRoughness	0.200000003		%read{112,128} %write{2147483647,-1}
param	float	DiffuseRoughness	0		%read{92,214} %write{2147483647,-1}
param	float	Emission	0		%read{2147483647,-1} %write{2147483647,-1}
oparam	closure color	BSDF			%read{105,222} %write{93,222}
global	vector	I	%read{165,165} %write{2147483647,-1}
global	normal	N	%read{0,3} %write{2147483647,-1}
global	vector	dPdu	%read{2,2} %write{2147483647,-1}
local	vector	___257_axis	%read{37,39} %write{34,34}
local	float	___257_cosang	%read{36,77} %write{35,35}
local	float	___257_sinang	%read{47,72} %write{35,35}
local	float	___257_cosang1	%read{46,71} %write{36,36}
local	float	___257_x	%read{40,72} %write{37,37}
local	float	___257_y	%read{45,70} %write{38,38}
local	float	___257_z	%read{47,75} %write{39,39}
local	matrix	___257_M	%read{81,81} %write{79,79}
local	float	___368_c	%read{170,182} %write{167,167}
local	float	___368_g	%read{172,181} %write{171,174}
local	float	___368_result	%read{191,191} %write{189,190}
local	float	___369_A	%read{185,186} %write{177,177}
local	float	___369_B	%read{187,187} %write{184,184}
local	float	f	%read{156,157} %write{4,4}
local	float	diffuse_weight	%read{83,106} %write{13,13}
local	float	final_transmission	%read{22,216} %write{21,21}
local	float	specular_weight	%read{107,146} %write{22,22}
local	vector	T	%read{80,145} %write{23,82}
local	float	m_cdlum	%read{25,27} %write{24,24}
local	color	m_ctint	%read{100,117} %write{27,28}
local	color	___372_mixed_ss_base_color	%read{92,93} %write{90,90}
local	color	___374_sheen_color	%read{103,103} %write{101,101}
local	float	___375_aspect	%read{113,114} %write{111,111}
local	float	___375_r2	%read{113,114} %write{112,112}
local	float	___375_alpha_x	%read{137,145} %write{113,113}
local	float	___375_alpha_y	%read{137,145} %write{114,114}
local	color	___375_tmp_col	%read{120,120} %write{118,118}
local	color	___375_Cspec0	%read{137,145} %write{124,124}
local	color	___378_Cspec0	%read{204,215} %write{153,153}
local	float	___378_eta	%read{168,215} %write{156,157}
local	float	___379_cosNO	%read{167,167} %write{165,165}
local	float	___379_Fr	%read{205,208} %write{191,191}
local	float	___379_refl_roughness	%read{196,203} %write{192,195}
local	float	___379_transmission_roughness	%read{206,206} %write{196,202}
const	float	$const1	9.99999975e-06		%read{4,218} %write{2147483647,-1}
const	float	$const2	1		%read{6,208} %write{2147483647,-1}
temp	float	$tmp1	%read{8,8} %write{7,7}
const	float	$const3	0		%read{7,195} %write{2147483647,-1}
const	string	$const4	"clamp"		%read{5,17} %write{2147483647,-1}
temp	float	$tmp2	%read{7,7} %write{6,6}
temp	float	$tmp3	%read{13,13} %write{8,8}
temp	float	$tmp4	%read{12,12} %write{11,11}
temp	float	$tmp5	%read{11,11} %write{10,10}
temp	float	$tmp6	%read{13,13} %write{12,12}
temp	float	$tmp7	%read{21,21} %write{16,16}
temp	float	$tmp8	%read{16,16} %write{15,15}
temp	float	$tmp9	%read{20,20} %write{19,19}
temp	float	$tmp10	%read{19,19} %write{18,18}
temp	float	$tmp11	%read{21,21} %write{20,20}
temp	int	$tmp12	%read{26,26} %write{25,25}
const	color	$const5	1 1 1		%read{28,152} %write{2147483647,-1}
temp	int	$tmp13	%read{30,30} %write{29,29}
const	float	$const6	6.28318548		%read{31,31} %write{2147483647,-1}
temp	float	$tmp14	%read{35,35} %write{31,31}
const	point	$const7	0 0 0		%read{33,82} %write{2147483647,-1}
const	string	$const8	"rotate"		%read{32,32} %write{2147483647,-1}
temp	vector	$tmp16	%read{34,34} %write{33,33}
const	int	$const9	0		%read{37,172} %write{2147483647,-1}
const	int	$const10	1		%read{38,38} %write{2147483647,-1}
const	int	$const11	2		%read{39,39} %write{2147483647,-1}
temp	float	$tmp17	%read{44,44} %write{40,40}
temp	float	$tmp18	%read{42,42} %write{41,41}
temp	float	$tmp19	%read{43,43} %write{42,42}
temp	float	$tmp20	%read{44,44} %write{43,43}
temp	float	$tmp21	%read{79,79} %write{44,44}
temp	float	$tmp22	%read{46,46} %write{45,45}
temp	float	$tmp23	%read{48,48} %write{46,46}
temp	float	$tmp24	%read{48,48} %write{47,47}
temp	float	$tmp25	%read{79,79} %write{48,48}
temp	float	$tmp26	%read{50,50} %write{49,49}
temp	float	$tmp27	%read{52,52} %write{50,50}
temp	float	$tmp28	%read{52,52} %write{51,51}
temp	float	$tmp29	%read{79,79} %write{52,52}
temp	float	$tmp30	%read{54,54} %write{53,53}
temp	float	$tmp31	%read{56,56} %write{54,54}
temp	float	$tmp32	%read{56,56} %write{55,55}
temp	float	$tmp33	%read{79,79} %write{56,56}
temp	float	$tmp34	%read{61,61} %write{57,57}
temp	float	$tmp35	%read{59,59} %write{58,58}
temp	float	$tmp36	%read{60,60} %write{59,59}
temp	float	$tmp37	%read{61,61} %write{60,60}
temp	float	$tmp38	%read{79,79} %write{61,61}
temp	float	$tmp39	%read{63,63} %write{62,62}
temp	float	$tmp40	%read{65,65} %write{63,63}
temp	float	$tmp41	%read{65,65} %write{64,64}
temp	float	$tmp42	%read{79,79} %write{65,65}
temp	float	$tmp43	%read{67,67} %write{66,66}
temp	float	$tmp44	%read{69,69} %write{67,67}
temp	float	$tmp45	%read{69,69} %write{68,68}
temp	float	$tmp46	%read{79,79} %write{69,69}
temp	float	$tmp47	%read{71,71} %write{70,70}
temp	float	$tmp48	%read{73,73} %write{71,71}
temp	float	$tmp49	%read{73,73} %write{72,72}
temp	float	$tmp50	%read{79,79} %write{73,73}
temp	float	$tmp51	%read{78,78} %write{74,74}
temp	float	$tmp52	%read{76,76} %write{75,75}
temp	float	$tmp53	%read{77,77} %write{76,76}
temp	float	$tmp54	%read{78,78} %write{77,77}
temp	float	$tmp55	%read{79,79} %write{78,78}
temp	vector	$tmp56	%read{82,82} %write{81,81}
temp	vector	$tmp57	%read{81,81} %write{80,80}
temp	int	$tmp58	%read{84,84} %write{83,83}
temp	int	$tmp59	%read{86,86} %write{85,85}
temp	color	$tmp60	%read{90,90} %write{87,87}
temp	float	$tmp61	%read{89,89} %write{88,88}
temp	color	$tmp62	%read{90,90} %write{89,89}
temp	closure color	$tmp63	%read{93,93} %write{92,92}
temp	vector	$tmp64	%read{92,92} %write{91,91}
const	string	$const12	"roughness"		%read{92,92} %write{2147483647,-1}
const	string	$const13	"ior"		%read{92,92} %write{2147483647,-1}
const	string	$const14	"anisotropy"		%read{92,92} %write{2147483647,-1}
const	string	$const15	"bssrdf"		%read{92,92} %write{2147483647,-1}
temp	closure color	$tmp65	%read{95,95} %write{94,94}
const	string	$const16	"principled_diffuse"		%read{94,94} %write{2147483647,-1}
temp	int	$tmp66	%read{97,97} %write{96,96}
temp	float	$tmp68	%read{99,99} %write{98,98}
temp	color	$tmp69	%read{101,101} %write{99,99}
temp	color	$tmp70	%read{101,101} %write{100,100}
temp	closure color	$tmp71	%read{104,104} %write{102,102}
const	string	$const17	"principled_sheen"		%read{102,102} %write{2147483647,-1}
temp	color	$tmp72	%read{104,104} %write{103,103}
temp	closure color	$tmp73	%read{105,105} %write{104,104}
temp	int	$tmp74	%read{108,108} %write{107,107}
const	float	$const18	0.899999976		%read{109,109} %write{2147483647,-1}
temp	float	$tmp75	%read{110,110} %write{109,109}
temp	float	$tmp76	%read{111,111} %write{110,110}
temp	float	$tmp78	%read{116,116} %write{115,115}
temp	color	$tmp79	%read{118,118} %write{116,116}
temp	color	$tmp80	%read{118,118} %write{117,117}
const	float	$const19	0.0799999982		%read{119,140} %write{2147483647,-1}
temp	float	$tmp81	%read{120,120} %write{119,119}
temp	color	$tmp82	%read{122,122} %write{120,120}
temp	float	$tmp83	%read{122,122} %write{121,121}
temp	color	$tmp84	%read{124,124} %write{122,122}
temp	color	$tmp85	%read{124,124} %write{123,123}
const	string	$const20	"GGX"		%read{125,197} %write{2147483647,-1}
temp	int	$tmp86	%read{126,126} %write{125,125}
temp	int	$tmp87	%read{127,131} %write{126,130}
const	float	$const21	0.075000003		%read{128,128} %write{2147483647,-1}
temp	int	$tmp88	%read{129,129} %write{128,128}
temp	int	$tmp89	%read{130,130} %write{129,129}
temp	closure color	$tmp90	%read{138,138} %write{137,137}
const	float	$const22	2		%read{135,143} %write{2147483647,-1}
temp	float	$tmp91	%read{134,134} %write{133,133}
temp	float	$tmp92	%read{133,133} %write{132,132}
temp	float	$tmp93	%read{135,135} %write{134,134}
temp	float	$tmp94	%read{136,136} %write{135,135}
temp	float	$tmp95	%read{137,137} %write{136,136}
const	string	$const23	"microfacet_ggx_aniso_fresnel"		%read{137,137} %write{2147483647,-1}
temp	closure color	$tmp96	%read{139,139} %write{138,138}
temp	closure color	$tmp97	%read{146,146} %write{145,145}
temp	float	$tmp98	%read{142,142} %write{141,141}
temp	float	$tmp99	%read{141,141} %write{140,140}
temp	float	$tmp100	%read{143,143} %write{142,142}
temp	float	$tmp101	%read{144,144} %write{143,143}
temp	float	$tmp102	%read{145,145} %write{144,144}
const	string	$const24	"microfacet_multi_ggx_aniso_fresnel"		%read{145,145} %write{2147483647,-1}
temp	closure color	$tmp103	%read{147,147} %write{146,146}
temp	int	$tmp104	%read{149,149} %write{148,148}
temp	color	$tmp105	%read{153,153} %write{150,150}
temp	float	$tmp107	%read{152,152} %write{151,151}
temp	color	$tmp108	%read{153,153} %write{152,152}
temp	int	$tmp109	%read{155,155} %write{154,154}
temp	int	$tmp110	%read{159,159} %write{158,158}
temp	int	$tmp111	%read{160,164} %write{159,163}
const	float	$const25	0.0500000007		%read{161,161} %write{2147483647,-1}
temp	int	$tmp112	%read{162,162} %write{161,161}
temp	int	$tmp113	%read{163,163} %write{162,162}
const	string	$const26	"fresnel_dielectric_cos"		%read{166,166} %write{2147483647,-1}
temp	float	$tmp114	%read{169,169} %write{168,168}
temp	float	$tmp115	%read{171,171} %write{169,169}
temp	float	$tmp116	%read{171,171} %write{170,170}
temp	int	$tmp117	%read{173,173} %write{172,172}
temp	float	$tmp118	%read{177,177} %write{175,175}
temp	float	$tmp119	%read{177,177} %write{176,176}
temp	float	$tmp120	%read{179,179} %write{178,178}
temp	float	$tmp121	%read{180,180} %write{179,179}
temp	float	$tmp122	%read{184,184} %write{180,180}
temp	float	$tmp123	%read{182,182} %write{181,181}
temp	float	$tmp124	%read{183,183} %write{182,182}
temp	float	$tmp125	%read{184,184} %write{183,183}
const	float	$const27	0.5		%read{185,185} %write{2147483647,-1}
temp	float	$tmp126	%read{186,186} %write{185,185}
temp	float	$tmp127	%read{189,189} %write{186,186}
temp	float	$tmp128	%read{188,188} %write{187,187}
temp	float	$tmp129	%read{189,189} %write{188,188}
const	float	$const28	0.00999999978		%read{193,193} %write{2147483647,-1}
temp	int	$tmp130	%read{194,194} %write{193,193}
temp	int	$tmp131	%read{198,198} %write{197,197}
temp	float	$tmp132	%read{201,201} %write{199,199}
temp	float	$tmp133	%read{201,201} %write{200,200}
temp	float	$tmp134	%read{202,202} %write{201,201}
temp	closure color	$tmp135	%read{205,205} %write{204,204}
temp	float	$tmp136	%read{204,204} %write{203,203}
const	string	$const29	"microfacet_ggx_fresnel"		%read{204,204} %write{2147483647,-1}
temp	closure color	$tmp137	%read{211,211} %write{205,205}
temp	closure color	$tmp138	%read{210,210} %write{207,207}
temp	float	$tmp139	%read{207,207} %write{206,206}
const	string	$const30	"microfacet_ggx_refraction"		%read{207,207} %write{2147483647,-1}
temp	float	$tmp140	%read{209,209} %write{208,208}
temp	color	$tmp141	%read{210,210} %write{209,209}
temp	closure color	$tmp142	%read{211,211} %write{210,210}
temp	closure color	$tmp143	%read{212,212} %write{211,211}
temp	closure color	$tmp144	%read{213,213} %write{212,212}
temp	closure color	$tmp145	%read{216,216} %write{215,215}
temp	float	$tmp146	%read{215,215} %write{214,214}
const	string	$const31	"microfacet_multi_ggx_glass_fresnel"		%read{215,215} %write{2147483647,-1}
temp	closure color	$tmp147	%read{217,217} %write{216,216}
temp	int	$tmp148	%read{219,219} %write{218,218}
temp	closure color	$tmp149	%read{222,222} %write{221,221}
temp	float	$tmp150	%read{221,221} %write{220,220}
const	string	$const32	"principled_clearcoat"		%read{221,221} %write{2147483647,-1}
code Normal
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:32
#                             normal ClearcoatNormal = N,
	assign		Normal N 	%filename{"C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl"} %line{32} %argrw{"wr"}
code ClearcoatNormal
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:33
#                             normal Tangent = normalize(dPdu),
	assign		ClearcoatNormal N 	%filename{"C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl"} %line{33} %argrw{"wr"}
code Tangent
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:34
#                             normal SpecularNormal = N,
	normalize	Tangent dPdu 	%filename{"C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl"} %line{34} %argrw{"wr"}
code SpecularNormal
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:35
#                             float SpecularRoughness = 0.2,
	assign		SpecularNormal N 	%filename{"C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl"} %line{35} %argrw{"wr"}
code ___main___
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:41
#   float diffuse_weight = (1.0 - clamp(Metallic, 0.0, 1.0)) * (1.0 - clamp(Transmission, 0.0, 1.0));
	max		f IOR $const1 	%filename{"C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl"} %line{41} %argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:42
#   float final_transmission = clamp(Transmission, 0.0, 1.0) * (1.0 - clamp(Metallic, 0.0, 1.0));
	functioncall	$const4 8 	%line{42} %argrw{"r"}
# C:\\Program Files\\Blender Foundation\\Blender 3.0\\3.0\\scripts\\addons\\cycles\\shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp2 Metallic $const2 	%filename{"C:\\Program Files\\Blender Foundation\\Blender 3.0\\3.0\\scripts\\addons\\cycles\\shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp1 $tmp2 $const3 	%argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:42
#   float final_transmission = clamp(Transmission, 0.0, 1.0) * (1.0 - clamp(Metallic, 0.0, 1.0));
	sub		$tmp3 $const2 $tmp1 	%filename{"C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl"} %line{42} %argrw{"wrr"}
	functioncall	$const4 12 	%argrw{"r"}
# C:\\Program Files\\Blender Foundation\\Blender 3.0\\3.0\\scripts\\addons\\cycles\\shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp5 Transmission $const2 	%filename{"C:\\Program Files\\Blender Foundation\\Blender 3.0\\3.0\\scripts\\addons\\cycles\\shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp4 $tmp5 $const3 	%argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:42
#   float final_transmission = clamp(Transmission, 0.0, 1.0) * (1.0 - clamp(Metallic, 0.0, 1.0));
	sub		$tmp6 $const2 $tmp4 	%filename{"C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl"} %line{42} %argrw{"wrr"}
	mul		diffuse_weight $tmp3 $tmp6 	%argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:43
#   float specular_weight = (1.0 - final_transmission);
	functioncall	$const4 17 	%line{43} %argrw{"r"}
# C:\\Program Files\\Blender Foundation\\Blender 3.0\\3.0\\scripts\\addons\\cycles\\shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp8 Transmission $const2 	%filename{"C:\\Program Files\\Blender Foundation\\Blender 3.0\\3.0\\scripts\\addons\\cycles\\shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp7 $tmp8 $const3 	%argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:43
#   float specular_weight = (1.0 - final_transmission);
	functioncall	$const4 20 	%filename{"C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl"} %line{43} %argrw{"r"}
# C:\\Program Files\\Blender Foundation\\Blender 3.0\\3.0\\scripts\\addons\\cycles\\shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp10 Metallic $const2 	%filename{"C:\\Program Files\\Blender Foundation\\Blender 3.0\\3.0\\scripts\\addons\\cycles\\shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp9 $tmp10 $const3 	%argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:43
#   float specular_weight = (1.0 - final_transmission);
	sub		$tmp11 $const2 $tmp9 	%filename{"C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl"} %line{43} %argrw{"wrr"}
	mul		final_transmission $tmp7 $tmp11 	%argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:44
# 
	sub		specular_weight $const2 final_transmission 	%line{44} %argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:46
# 
	assign		T Tangent 	%line{46} %argrw{"wr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:48
#   color m_ctint = m_cdlum > 0.0 ? BaseColor / m_cdlum :
	luminance	m_cdlum BaseColor 	%line{48} %argrw{"wr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:49
#                                   color(1.0, 1.0, 1.0);  // normalize lum. to isolate hue+sat
	gt		$tmp12 m_cdlum $const3 	%line{49} %argrw{"wrr"}
	if		$tmp12 28 29 	%argrw{"r"}
	div		m_ctint BaseColor m_cdlum 	%argrw{"wrr"}
	assign		m_ctint $const5 	%argrw{"wr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:53
#     T = rotate(T, AnisotropicRotation * M_2PI, point(0.0, 0.0, 0.0), Normal);
	neq		$tmp13 AnisotropicRotation $const3 	%line{53} %argrw{"wrr"}
	if		$tmp13 83 83 	%argrw{"r"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:54
#     
	mul		$tmp14 AnisotropicRotation $const6 	%line{54} %argrw{"wrr"}
	functioncall	$const8 83 	%argrw{"r"}
# C:\\Program Files\\Blender Foundation\\Blender 3.0\\3.0\\scripts\\addons\\cycles\\shader/stdosl.h:270
#     vector axis = normalize (b - a);
	sub		$tmp16 Normal $const7 	%filename{"C:\\Program Files\\Blender Foundation\\Blender 3.0\\3.0\\scripts\\addons\\cycles\\shader/stdosl.h"} %line{270} %argrw{"wrr"}
	normalize	___257_axis $tmp16 	%argrw{"wr"}
# C:\\Program Files\\Blender Foundation\\Blender 3.0\\3.0\\scripts\\addons\\cycles\\shader/stdosl.h:272
#     sincos (angle, sinang, cosang);
	sincos		$tmp14 ___257_sinang ___257_cosang 	%line{272} %argrw{"rww"}
# C:\\Program Files\\Blender Foundation\\Blender 3.0\\3.0\\scripts\\addons\\cycles\\shader/stdosl.h:273
#     float cosang1 = 1.0 - cosang;
	sub		___257_cosang1 $const2 ___257_cosang 	%line{273} %argrw{"wrr"}
# C:\\Program Files\\Blender Foundation\\Blender 3.0\\3.0\\scripts\\addons\\cycles\\shader/stdosl.h:274
#     float x = axis[0], y = axis[1], z = axis[2];
	compref		___257_x ___257_axis $const9 	%line{274} %argrw{"wrr"}
	compref		___257_y ___257_axis $const10 	%argrw{"wrr"}
	compref		___257_z ___257_axis $const11 	%argrw{"wrr"}
# C:\\Program Files\\Blender Foundation\\Blender 3.0\\3.0\\scripts\\addons\\cycles\\shader/stdosl.h:275
#     matrix M = matrix (x * x + (1.0 - x * x) * cosang,
	mul		$tmp17 ___257_x ___257_x 	%line{275} %argrw{"wrr"}
	mul		$tmp18 ___257_x ___257_x 	%argrw{"wrr"}
	sub		$tmp19 $const2 $tmp18 	%argrw{"wrr"}
	mul		$tmp20 $tmp19 ___257_cosang 	%argrw{"wrr"}
	add		$tmp21 $tmp17 $tmp20 	%argrw{"wrr"}
# C:\\Program Files\\Blender Foundation\\Blender 3.0\\3.0\\scripts\\addons\\cycles\\shader/stdosl.h:276
#                        x * y * cosang1 + z * sinang,
	mul		$tmp22 ___257_x ___257_y 	%line{276} %argrw{"wrr"}
	mul		$tmp23 $tmp22 ___257_cosang1 	%argrw{"wrr"}
	mul		$tmp24 ___257_z ___257_sinang 	%argrw{"wrr"}
	add		$tmp25 $tmp23 $tmp24 	%argrw{"wrr"}
# C:\\Program Files\\Blender Foundation\\Blender 3.0\\3.0\\scripts\\addons\\cycles\\shader/stdosl.h:277
#                        x * z * cosang1 - y * sinang,
	mul		$tmp26 ___257_x ___257_z 	%line{277} %argrw{"wrr"}
	mul		$tmp27 $tmp26 ___257_cosang1 	%argrw{"wrr"}
	mul		$tmp28 ___257_y ___257_sinang 	%argrw{"wrr"}
	sub		$tmp29 $tmp27 $tmp28 	%argrw{"wrr"}
# C:\\Program Files\\Blender Foundation\\Blender 3.0\\3.0\\scripts\\addons\\cycles\\shader/stdosl.h:279
#                        x * y * cosang1 - z * sinang,
	mul		$tmp30 ___257_x ___257_y 	%line{279} %argrw{"wrr"}
	mul		$tmp31 $tmp30 ___257_cosang1 	%argrw{"wrr"}
	mul		$tmp32 ___257_z ___257_sinang 	%argrw{"wrr"}
	sub		$tmp33 $tmp31 $tmp32 	%argrw{"wrr"}
# C:\\Program Files\\Blender Foundation\\Blender 3.0\\3.0\\scripts\\addons\\cycles\\shader/stdosl.h:280
#                        y * y + (1.0 - y * y) * cosang,
	mul		$tmp34 ___257_y ___257_y 	%line{280} %argrw{"wrr"}
	mul		$tmp35 ___257_y ___257_y 	%argrw{"wrr"}
	sub		$tmp36 $const2 $tmp35 	%argrw{"wrr"}
	mul		$tmp37 $tmp36 ___257_cosang 	%argrw{"wrr"}
	add		$tmp38 $tmp34 $tmp37 	%argrw{"wrr"}
# C:\\Program Files\\Blender Foundation\\Blender 3.0\\3.0\\scripts\\addons\\cycles\\shader/stdosl.h:281
#                        y * z * cosang1 + x * sinang,
	mul		$tmp39 ___257_y ___257_z 	%line{281} %argrw{"wrr"}
	mul		$tmp40 $tmp39 ___257_cosang1 	%argrw{"wrr"}
	mul		$tmp41 ___257_x ___257_sinang 	%argrw{"wrr"}
	add		$tmp42 $tmp40 $tmp41 	%argrw{"wrr"}
# C:\\Program Files\\Blender Foundation\\Blender 3.0\\3.0\\scripts\\addons\\cycles\\shader/stdosl.h:283
#                        x * z * cosang1 + y * sinang,
	mul		$tmp43 ___257_x ___257_z 	%line{283} %argrw{"wrr"}
	mul		$tmp44 $tmp43 ___257_cosang1 	%argrw{"wrr"}
	mul		$tmp45 ___257_y ___257_sinang 	%argrw{"wrr"}
	add		$tmp46 $tmp44 $tmp45 	%argrw{"wrr"}
# C:\\Program Files\\Blender Foundation\\Blender 3.0\\3.0\\scripts\\addons\\cycles\\shader/stdosl.h:284
#                        y * z * cosang1 - x * sinang,
	mul		$tmp47 ___257_y ___257_z 	%line{284} %argrw{"wrr"}
	mul		$tmp48 $tmp47 ___257_cosang1 	%argrw{"wrr"}
	mul		$tmp49 ___257_x ___257_sinang 	%argrw{"wrr"}
	sub		$tmp50 $tmp48 $tmp49 	%argrw{"wrr"}
# C:\\Program Files\\Blender Foundation\\Blender 3.0\\3.0\\scripts\\addons\\cycles\\shader/stdosl.h:285
#                        z * z + (1.0 - z * z) * cosang,
	mul		$tmp51 ___257_z ___257_z 	%line{285} %argrw{"wrr"}
	mul		$tmp52 ___257_z ___257_z 	%argrw{"wrr"}
	sub		$tmp53 $const2 $tmp52 	%argrw{"wrr"}
	mul		$tmp54 $tmp53 ___257_cosang 	%argrw{"wrr"}
	add		$tmp55 $tmp51 $tmp54 	%argrw{"wrr"}
# C:\\Program Files\\Blender Foundation\\Blender 3.0\\3.0\\scripts\\addons\\cycles\\shader/stdosl.h:275
#     matrix M = matrix (x * x + (1.0 - x * x) * cosang,
	matrix		___257_M $tmp21 $tmp25 $tmp29 $const3 $tmp33 $tmp38 $tmp42 $const3 $tmp46 $tmp50 $tmp55 $const3 $const3 $const3 $const3 $const2 	%line{275} %argrw{"wrrrrrrrrrrrrrrrr"}
# C:\\Program Files\\Blender Foundation\\Blender 3.0\\3.0\\scripts\\addons\\cycles\\shader/stdosl.h:288
#     return transform (M, p-a) + a;
	sub		$tmp57 T $const7 	%line{288} %argrw{"wrr"}
	transformv	$tmp56 ___257_M $tmp57 	%argrw{"wrr"}
	add		T $tmp56 $const7 	%argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:58
#         if (Subsurface > 1e-5) {
	gt		$tmp58 diffuse_weight $const1 	%filename{"C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl"} %line{58} %argrw{"wrr"}
	if		$tmp58 107 107 	%argrw{"r"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:59
#           color mixed_ss_base_color = SubsurfaceColor * Subsurface + BaseColor * (1.0 - Subsurface);
	gt		$tmp59 Subsurface $const1 	%line{59} %argrw{"wrr"}
	if		$tmp59 94 96 	%argrw{"r"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:60
# 
	mul		$tmp60 SubsurfaceColor Subsurface 	%line{60} %argrw{"wrr"}
	sub		$tmp61 $const2 Subsurface 	%argrw{"wrr"}
	mul		$tmp62 BaseColor $tmp61 	%argrw{"wrr"}
	add		___372_mixed_ss_base_color $tmp60 $tmp62 	%argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:64
#                                               mixed_ss_base_color,
	mul		$tmp64 Subsurface SubsurfaceRadius 	%line{64} %argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:62
#                                               Normal,
	closure		$tmp63 $const15 subsurface_method Normal $tmp64 ___372_mixed_ss_base_color $const12 DiffuseRoughness $const13 SubsurfaceIOR $const14 SubsurfaceAnisotropy 	%line{62} %argrw{"wrrrrrrrrrrr"}
	mul		BSDF $tmp63 ___372_mixed_ss_base_color 	%argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:74
#         }
	closure		$tmp65 $const16 Normal DiffuseRoughness 	%line{74} %argrw{"wrrr"}
	mul		BSDF $tmp65 BaseColor 	%argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:77
#       color sheen_color = color(1.0, 1.0, 1.0) * (1.0 - SheenTint) + m_ctint * SheenTint;
	gt		$tmp66 Sheen $const1 	%line{77} %argrw{"wrr"}
	if		$tmp66 106 106 	%argrw{"r"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:78
# 
	sub		$tmp68 $const2 SheenTint 	%line{78} %argrw{"wrr"}
	mul		$tmp69 $const5 $tmp68 	%argrw{"wrr"}
	mul		$tmp70 m_ctint SheenTint 	%argrw{"wrr"}
	add		___374_sheen_color $tmp69 $tmp70 	%argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:80
#     }
	closure		$tmp71 $const17 Normal 	%line{80} %argrw{"wrr"}
	mul		$tmp72 ___374_sheen_color Sheen 	%argrw{"wrr"}
	mul		$tmp73 $tmp71 $tmp72 	%argrw{"wrr"}
	add		BSDF BSDF $tmp73 	%argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:83
#     // BSDF = diffuse_weight;
	mul		BSDF BSDF diffuse_weight 	%line{83} %argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:90
#     float aspect = sqrt(1.0 - Anisotropic * 0.9);
	gt		$tmp74 specular_weight $const1 	%line{90} %argrw{"wrr"}
	if		$tmp74 148 148 	%argrw{"r"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:91
#     float r2 = SpecularRoughness * SpecularRoughness;
	mul		$tmp75 Anisotropic $const18 	%line{91} %argrw{"wrr"}
	sub		$tmp76 $const2 $tmp75 	%argrw{"wrr"}
	sqrt		___375_aspect $tmp76 	%argrw{"wr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:92
# 
	mul		___375_r2 SpecularRoughness SpecularRoughness 	%line{92} %argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:94
#     float alpha_y = r2 * aspect;
	div		___375_alpha_x ___375_r2 ___375_aspect 	%line{94} %argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:95
# 
	mul		___375_alpha_y ___375_r2 ___375_aspect 	%line{95} %argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:97
# 
	sub		$tmp78 $const2 SpecularTint 	%line{97} %argrw{"wrr"}
	mul		$tmp79 $const5 $tmp78 	%argrw{"wrr"}
	mul		$tmp80 m_ctint SpecularTint 	%argrw{"wrr"}
	add		___375_tmp_col $tmp79 $tmp80 	%argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:99
# 
	mul		$tmp81 Specular $const19 	%line{99} %argrw{"wrr"}
	mul		$tmp82 $tmp81 ___375_tmp_col 	%argrw{"wrr"}
	sub		$tmp83 $const2 Metallic 	%argrw{"wrr"}
	mul		$tmp84 $tmp82 $tmp83 	%argrw{"wrr"}
	mul		$tmp85 BaseColor Metallic 	%argrw{"wrr"}
	add		___375_Cspec0 $tmp84 $tmp85 	%argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:101
#       BSDF = BSDF + specular_weight *
	eq		$tmp86 distribution $const20 	%line{101} %argrw{"wrr"}
	neq		$tmp87 $tmp86 $const9 	%argrw{"wrr"}
	if		$tmp87 128 131 	%argrw{"r"}
	le		$tmp88 SpecularRoughness $const21 	%argrw{"wrr"}
	neq		$tmp89 $tmp88 $const9 	%argrw{"wrr"}
	assign		$tmp87 $tmp89 	%argrw{"wr"}
	if		$tmp87 140 148 	%argrw{"r"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:107
#                                                      BaseColor,
	mul		$tmp92 $const19 Specular 	%line{107} %argrw{"wrr"}
	sqrt		$tmp91 $tmp92 	%argrw{"wr"}
	sub		$tmp93 $const2 $tmp91 	%argrw{"wrr"}
	div		$tmp94 $const22 $tmp93 	%argrw{"wrr"}
	sub		$tmp95 $tmp94 $const2 	%argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:103
#                                                      T,
	closure		$tmp90 $const23 SpecularNormal T ___375_alpha_x ___375_alpha_y $tmp95 BaseColor ___375_Cspec0 	%line{103} %argrw{"wrrrrrrrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:102
#                         microfacet_ggx_aniso_fresnel(SpecularNormal,
	mul		$tmp96 $tmp90 specular_weight 	%line{102} %argrw{"wrr"}
	add		BSDF BSDF $tmp96 	%argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:117
#                                           BaseColor,
	mul		$tmp99 $const19 Specular 	%line{117} %argrw{"wrr"}
	sqrt		$tmp98 $tmp99 	%argrw{"wr"}
	sub		$tmp100 $const2 $tmp98 	%argrw{"wrr"}
	div		$tmp101 $const22 $tmp100 	%argrw{"wrr"}
	sub		$tmp102 $tmp101 $const2 	%argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:112
#                                           SpecularNormal,
	closure		$tmp97 $const24 SpecularNormal T ___375_alpha_x ___375_alpha_y $tmp102 BaseColor ___375_Cspec0 	%line{112} %argrw{"wrrrrrrrr"}
	mul		$tmp103 $tmp97 specular_weight 	%argrw{"wrr"}
	add		BSDF BSDF $tmp103 	%argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:123
#     color Cspec0 = BaseColor * SpecularTint + color(1.0, 1.0, 1.0) * (1.0 - SpecularTint);
	gt		$tmp104 final_transmission $const1 	%line{123} %argrw{"wrr"}
	if		$tmp104 218 218 	%argrw{"r"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:124
#     float eta = backfacing() ? 1.0 / f : f;
	mul		$tmp105 BaseColor SpecularTint 	%line{124} %argrw{"wrr"}
	sub		$tmp107 $const2 SpecularTint 	%argrw{"wrr"}
	mul		$tmp108 $const5 $tmp107 	%argrw{"wrr"}
	add		___378_Cspec0 $tmp105 $tmp108 	%argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:125
# 
	backfacing	$tmp109 	%line{125} %argrw{"w"}
	if		$tmp109 157 158 	%argrw{"r"}
	div		___378_eta $const2 f 	%argrw{"wrr"}
	assign		___378_eta f 	%argrw{"wr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:128
#       float cosNO = dot(Normal, I);
	eq		$tmp110 distribution $const20 	%line{128} %argrw{"wrr"}
	neq		$tmp111 $tmp110 $const9 	%argrw{"wrr"}
	if		$tmp111 161 164 	%argrw{"r"}
	le		$tmp112 DiffuseRoughness $const25 	%argrw{"wrr"}
	neq		$tmp113 $tmp112 $const9 	%argrw{"wrr"}
	assign		$tmp111 $tmp113 	%argrw{"wr"}
	if		$tmp111 214 218 	%argrw{"r"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:129
#       float Fr = fresnel_dielectric_cos(cosNO, eta);
	dot		___379_cosNO Normal I 	%line{129} %argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:130
# 
	functioncall	$const26 192 	%line{130} %argrw{"r"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_fresnel.h:13
#   float c = fabs(cosi);
	fabs		___368_c ___379_cosNO 	%filename{"C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_fresnel.h"} %line{13} %argrw{"wr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_fresnel.h:14
#   float g = eta * eta - 1 + c * c;
	mul		$tmp114 ___378_eta ___378_eta 	%line{14} %argrw{"wrr"}
	sub		$tmp115 $tmp114 $const2 	%argrw{"wrr"}
	mul		$tmp116 ___368_c ___368_c 	%argrw{"wrr"}
	add		___368_g $tmp115 $tmp116 	%argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_fresnel.h:17
#   if (g > 0) {
	gt		$tmp117 ___368_g $const9 	%line{17} %argrw{"wrr"}
	if		$tmp117 190 191 	%argrw{"r"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_fresnel.h:18
#     g = sqrt(g);
	sqrt		___368_g ___368_g 	%line{18} %argrw{"wr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_fresnel.h:19
#     float A = (g - c) / (g + c);
	sub		$tmp118 ___368_g ___368_c 	%line{19} %argrw{"wrr"}
	add		$tmp119 ___368_g ___368_c 	%argrw{"wrr"}
	div		___369_A $tmp118 $tmp119 	%argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_fresnel.h:20
#     float B = (c * (g + c) - 1) / (c * (g - c) + 1);
	add		$tmp120 ___368_g ___368_c 	%line{20} %argrw{"wrr"}
	mul		$tmp121 ___368_c $tmp120 	%argrw{"wrr"}
	sub		$tmp122 $tmp121 $const2 	%argrw{"wrr"}
	sub		$tmp123 ___368_g ___368_c 	%argrw{"wrr"}
	mul		$tmp124 ___368_c $tmp123 	%argrw{"wrr"}
	add		$tmp125 $tmp124 $const2 	%argrw{"wrr"}
	div		___369_B $tmp122 $tmp125 	%argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_fresnel.h:21
#     result = 0.5 * A * A * (1 + B * B);
	mul		$tmp126 $const27 ___369_A 	%line{21} %argrw{"wrr"}
	mul		$tmp127 $tmp126 ___369_A 	%argrw{"wrr"}
	mul		$tmp128 ___369_B ___369_B 	%argrw{"wrr"}
	add		$tmp129 $const2 $tmp128 	%argrw{"wrr"}
	mul		___368_result $tmp127 $tmp129 	%argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_fresnel.h:24
#     result = 1.0; /* TIR (no refracted component) */
	assign		___368_result $const2 	%line{24} %argrw{"wr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_fresnel.h:26
#   return result;
	assign		___379_Fr ___368_result 	%line{26} %argrw{"wr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:133
#       if (DiffuseRoughness <= 1e-2)
	assign		___379_refl_roughness DiffuseRoughness 	%filename{"C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl"} %line{133} %argrw{"wr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:134
#         refl_roughness = 0.0;
	le		$tmp130 DiffuseRoughness $const28 	%line{134} %argrw{"wrr"}
	if		$tmp130 196 196 	%argrw{"r"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:135
# 
	assign		___379_refl_roughness $const3 	%line{135} %argrw{"wr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:137
#       if (distribution == "GGX")
	assign		___379_transmission_roughness ___379_refl_roughness 	%line{137} %argrw{"wr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:138
#         transmission_roughness = 1.0 - (1.0 - refl_roughness) * (1.0 - TransmissionRoughness);
	eq		$tmp131 distribution $const20 	%line{138} %argrw{"wrr"}
	if		$tmp131 203 203 	%argrw{"r"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:139
# 
	sub		$tmp132 $const2 ___379_refl_roughness 	%line{139} %argrw{"wrr"}
	sub		$tmp133 $const2 TransmissionRoughness 	%argrw{"wrr"}
	mul		$tmp134 $tmp132 $tmp133 	%argrw{"wrr"}
	sub		___379_transmission_roughness $const2 $tmp134 	%argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:144
#                   (1.0 - Fr) * BaseColor *
	mul		$tmp136 ___379_refl_roughness ___379_refl_roughness 	%line{144} %argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:143
#                            Normal, refl_roughness * refl_roughness, eta, BaseColor, Cspec0) +
	closure		$tmp135 $const29 Normal $tmp136 ___378_eta BaseColor ___378_Cspec0 	%line{143} %argrw{"wrrrrrr"}
	mul		$tmp137 $tmp135 ___379_Fr 	%argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:147
#     }
	mul		$tmp139 ___379_transmission_roughness ___379_transmission_roughness 	%line{147} %argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:146
#                           Normal, transmission_roughness * transmission_roughness, eta));
	closure		$tmp138 $const30 Normal $tmp139 ___378_eta 	%line{146} %argrw{"wrrrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:145
#                       microfacet_ggx_refraction(
	sub		$tmp140 $const2 ___379_Fr 	%line{145} %argrw{"wrr"}
	mul		$tmp141 $tmp140 BaseColor 	%argrw{"wrr"}
	mul		$tmp142 $tmp138 $tmp141 	%argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:144
#                   (1.0 - Fr) * BaseColor *
	add		$tmp143 $tmp137 $tmp142 	%line{144} %argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:142
#                  (Fr * microfacet_ggx_fresnel(
	mul		$tmp144 $tmp143 final_transmission 	%line{142} %argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:141
#              final_transmission *
	add		BSDF BSDF $tmp144 	%line{141} %argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:152
#       //BSDF = BSDF +
	mul		$tmp146 DiffuseRoughness DiffuseRoughness 	%line{152} %argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:151
#                             Normal, DiffuseRoughness * DiffuseRoughness, eta, BaseColor, Cspec0);      
	closure		$tmp145 $const31 Normal $tmp146 ___378_eta BaseColor ___378_Cspec0 	%line{151} %argrw{"wrrrrrr"}
	mul		$tmp147 $tmp145 final_transmission 	%argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:150
#              final_transmission * microfacet_multi_ggx_glass_fresnel(
	add		BSDF BSDF $tmp147 	%line{150} %argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:159
#     BSDF = BSDF + principled_clearcoat(
	gt		$tmp148 Clearcoat $const1 	%line{159} %argrw{"wrr"}
	if		$tmp148 223 223 	%argrw{"r"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:161
#   }
	mul		$tmp150 ClearcoatRoughness ClearcoatRoughness 	%line{161} %argrw{"wrr"}
# C:\\Users\\aleks\\source\\repos\\blender_b2r\\blender\\intern\\cycles\\kernel\\osl\\shaders\\node_principled_bsdf_abj.osl:160
#                       ClearcoatNormal, Clearcoat, ClearcoatRoughness * ClearcoatRoughness);
	closure		$tmp149 $const32 ClearcoatNormal Clearcoat $tmp150 	%line{160} %argrw{"wrrrr"}
	add		BSDF BSDF $tmp149 	%argrw{"wrr"}
	end
